{"ast":null,"code":"var _jsxFileName = \"/home/atsal/router/src/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport diamondBlock from './diamondBlock.png';\nimport diamondSword from './diamondSword.png';\nimport diamondPickaxe from './diamondPickaxe.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar retrievedObject = localStorage.getItem('items');\n\nconst Shop = _ref => {\n  _s();\n\n  let {\n    cartArr,\n    setCartArr,\n    cartQuantity,\n    setCartQuantity\n  } = _ref;\n  const [items, setItems] = useState([{\n    name: \"Diamond Block\",\n    price: 10,\n    img: diamondBlock,\n    id: \"db\",\n    quantity: 1\n  }, {\n    name: \"Diamond Sword\",\n    price: 5,\n    img: diamondSword,\n    id: \"ds\",\n    quantity: 1\n  }, {\n    name: \"Diamond Pickaxe\",\n    price: 6,\n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 1\n  }]);\n  const [incr, setIncr] = useState(null);\n\n  function addToCart(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n\n    if (itemsArr[indexSelectedItem].quantity === 0) {\n      alert(\"can't buy 0\");\n    }\n\n    let cartItems = cartArr;\n    cartItems[indexSelectedItem].quantity = cartItems[indexSelectedItem].quantity + itemsArr[indexSelectedItem].quantity;\n    setCartArr(cartItems);\n    localStorage.setItem('items', JSON.stringify(cartArr));\n    setCartQuantity(cartIem[indexSelectedItem].quantity + cartQuantity);\n    setIncr(true);\n  }\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = itemsArr[indexSelectedItem].quantity + 1;\n    setItems(itemsArr);\n    setIncr(true);\n  }\n\n  function decrementQuantity(e) {}\n\n  function handler(e) {\n    setIncr(true);\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = +parseInt(e.target.value);\n    setItems(itemsArr);\n  }\n\n  useEffect(() => {\n    if (incr) {\n      setItems(items);\n      setIncr(false);\n    }\n  }, [incr, items, cartQuantity]);\n  useEffect(() => {\n    if (incr) {\n      if (cartQuantity > 0) {\n        console.log(cartQuantity);\n        localStorage.setItem('cartquant', JSON.stringify(cartQuantity));\n      }\n    }\n  }, [cartQuantity, incr]);\n\n  function renderList() {\n    return items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"liItemWrap\",\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"itemImg\",\n          src: item.img,\n          alt: \"imgItem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), \"Unit price : \", item.price, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantitySection\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Quantity :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"incrDecrDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              defaultValue: \"1\",\n              id: item.id,\n              onChange: e => handler(e),\n              className: \"quantityInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"totalPrice\",\n          children: [\"Total price : \", parseInt(item.price || 0) * parseInt(item.quantity || 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: item.id,\n          className: \"addToCart\",\n          onClick: e => addToCart(e),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  console.log('retrievedObject: ', JSON.parse(retrievedObject));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barCart\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/shop/cart\",\n        state: {\n          from: JSON.parse(retrievedObject)\n        },\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cartSection\",\n          children: [\"Cart ( \", localStorage.getItem('cartquant'), \" ) \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 83\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"shopTitle\",\n      children: \"Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemsSection\",\n      children: renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"58PsThcZ8RAJ0HRlxbizddTHRDo=\");\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/home/atsal/router/src/Shop.js"],"names":["React","useState","useEffect","Link","diamondBlock","diamondSword","diamondPickaxe","retrievedObject","localStorage","getItem","Shop","cartArr","setCartArr","cartQuantity","setCartQuantity","items","setItems","name","price","img","id","quantity","incr","setIncr","addToCart","e","indexSelectedItem","findIndex","item","target","itemsArr","alert","cartItems","setItem","JSON","stringify","cartIem","incrementQuantity","decrementQuantity","handler","parseInt","value","console","log","renderList","map","parse","from"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport diamondBlock from './diamondBlock.png';\nimport diamondSword from './diamondSword.png';\nimport diamondPickaxe from './diamondPickaxe.png';\n\nvar retrievedObject = localStorage.getItem('items');\n\nconst Shop = ({cartArr, setCartArr, cartQuantity, setCartQuantity}) => {\n\n  const [items, setItems] = useState([\n    {name: \"Diamond Block\",\n    price: 10, \n    img: diamondBlock,\n    id: \"db\",\n    quantity: 1}, \n    {name: \"Diamond Sword\",\n    price: 5, \n    img: diamondSword ,\n    id: \"ds\",\n    quantity: 1}, \n    {name: \"Diamond Pickaxe\",\n    price: 6, \n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 1}, \n  ]);\n\n const [incr, setIncr] = useState(null)\n\n \n function addToCart(e) {  \n\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    if(itemsArr[indexSelectedItem].quantity === 0) {\n      alert(\"can't buy 0\")\n    }\n    let cartItems = cartArr;\n    \n    cartItems[indexSelectedItem].quantity = cartItems[indexSelectedItem].quantity + itemsArr[indexSelectedItem].quantity;\n    \n    setCartArr(cartItems)\n    localStorage.setItem('items', JSON.stringify(cartArr));\n    setCartQuantity(cartIem[indexSelectedItem].quantity + cartQuantity)\n    \n      setIncr(true)\n\n    \n   \n \n  }\n\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity =  itemsArr[indexSelectedItem].quantity + 1;\n    setItems(itemsArr)\n    setIncr(true)\n    \n  }\n\n  function decrementQuantity(e) {\n\n  }\n\n  function handler(e) {\n    setIncr(true)\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n     itemsArr[indexSelectedItem].quantity =+ parseInt(e.target.value)\n  \n     setItems(itemsArr)\n  \n  }\n\n  useEffect(() => {\n    if(incr) {\n      setItems(items)\n      setIncr(false)\n     \n    }\n\n\n  \n  },[ incr, items, cartQuantity])\n\n\n  useEffect(() => {\n    if(incr){\n      if(cartQuantity>0){\n    console.log(cartQuantity)\n    localStorage.setItem('cartquant', JSON.stringify(cartQuantity))\n      }\n    }\n  },[cartQuantity, incr])\n\n\n  function renderList() {\n    return (items.map(item => {\n      return (<li className=\"liItemWrap\" key={item.id}>{item.name} \n      <img className=\"itemImg\" src={item.img} alt=\"imgItem\"/> \n       Unit price : {item.price} \n      <div className=\"quantitySection\">\n        <p> Quantity :</p>\n         <div className=\"incrDecrDiv\">\n           <input defaultValue='1' id={item.id} onChange={(e) => handler(e)} className=\"quantityInput\"/>\n         \n         </div>\n\n      </div>\n      <div className=\"totalPrice\">Total price : {parseInt(item.price  || 0 ) * parseInt(item.quantity || 0)}</div>\n      <button id={item.id} className=\"addToCart\" onClick={(e) => addToCart(e)}>Add to cart</button></li>)\n    }))\n  }\n\n\n\n\n  console.log('retrievedObject: ',JSON.parse(retrievedObject) );\n  \n    return (\n        <div>\n          <div className=\"barCart\">\n          <Link   to='/shop/cart' state={{ from: JSON.parse(retrievedObject) }}>  <div className=\"cartSection\">Cart ( {localStorage.getItem('cartquant')} ) </div> </Link>\n         </div>\n          <h1 className=\"shopTitle\">Shop</h1>\n           <div className=\"itemsSection\">\n           {renderList()}\n           </div>\n        </div>\n      );\n    };\n    \n    \n    export default Shop;"]},"metadata":{},"sourceType":"module"}