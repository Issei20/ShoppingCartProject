{"ast":null,"code":"var _jsxFileName = \"/home/atsal/router/src/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport diamondBlock from './diamondBlock.png';\nimport diamondSword from './diamondSword.png';\nimport diamondPickaxe from './diamondPickaxe.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = _ref => {\n  _s();\n\n  let {\n    cartArr,\n    setCartArr\n  } = _ref;\n  const [items, setItems] = useState([{\n    name: \"Diamond Block\",\n    price: 10,\n    img: diamondBlock,\n    id: \"db\",\n    quantity: 1\n  }, {\n    name: \"Diamond Sword\",\n    price: 5,\n    img: diamondSword,\n    id: \"ds\",\n    quantity: 1\n  }, {\n    name: \"Diamond Pickaxe\",\n    price: 6,\n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 1\n  }]);\n  const [incr, setIncr] = useState(null);\n  const [cartQuantity, setCartQuantity] = useState(0);\n\n  function addToCart(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n\n    if (itemsArr[indexSelectedItem].quantity === 0) {\n      alert(\"can't buy 0\");\n    }\n\n    let cartItems = cartArr;\n    cartItems[indexSelectedItem].quantity = cartItems[indexSelectedItem].quantity + itemsArr[indexSelectedItem].quantity;\n    /* let objItem = {name: itemsArr[indexSelectedItem].name,\n    quantity: itemsArr[indexSelectedItem].quantity,\n    img: itemsArr[indexSelectedItem].img,\n    price: itemsArr[indexSelectedItem].price,\n    id: itemsArr[indexSelectedItem].id}  */\n\n    setCartArr(cartItems);\n    localStorage.setItem('items', JSON.stringify(cartArr));\n    setCartQuantity(cartArr[indexSelectedItem].quantity + cartQuantity);\n    localStorage.setItem('cartquant', JSON.stringify(cartQuantity));\n    setQuant(true);\n    /*  setCartQuantity(cartQuantity + itemsArr[indexSelectedItem].quantity)*/\n  }\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = itemsArr[indexSelectedItem].quantity + 1;\n    setItems(itemsArr);\n    setIncr(true);\n  }\n\n  function decrementQuantity(e) {}\n\n  function handler(e) {\n    setIncr(true);\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = +parseInt(e.target.value);\n    setItems(itemsArr);\n  }\n\n  useEffect(() => {\n    if (incr) {\n      setItems(items);\n      setIncr(false);\n    }\n  }, [incr, items]);\n  var retrievedObject = localStorage.getItem('items');\n  var retrievedQuant = localStorage.getItem('cartquant');\n\n  function renderList() {\n    return items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"liItemWrap\",\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"itemImg\",\n          src: item.img,\n          alt: \"imgItem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), \"Unit price : \", item.price, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantitySection\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Quantity :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"incrDecrDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: item.quantity || 0,\n              id: item.id,\n              onChange: e => handler(e),\n              className: \"quantityInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: item.id,\n              onClick: e => incrementQuantity(e),\n              className: \"incrDecr\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: item.id,\n              onClick: e => decrementQuantity(e),\n              className: \"incrDecr\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"totalPrice\",\n          children: [\"Total price : \", parseInt(item.price || 0) * parseInt(item.quantity || 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: item.id,\n          className: \"addToCart\",\n          onClick: e => addToCart(e),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  console.log('retrievedObject: ', JSON.parse(retrievedObject));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barCart\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/shop/cart\",\n        state: {\n          from: JSON.parse(retrievedObject)\n        },\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cartSection\",\n          children: [\"Cart ( \", retrievedQuant, \" ) \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 83\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"shopTitle\",\n      children: \"Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemsSection\",\n      children: renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"hW1NNUp2FAJrJHJfP3aAy0leaPw=\");\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/home/atsal/router/src/Shop.js"],"names":["React","useState","useEffect","Link","diamondBlock","diamondSword","diamondPickaxe","Shop","cartArr","setCartArr","items","setItems","name","price","img","id","quantity","incr","setIncr","cartQuantity","setCartQuantity","addToCart","e","indexSelectedItem","findIndex","item","target","itemsArr","alert","cartItems","localStorage","setItem","JSON","stringify","setQuant","incrementQuantity","decrementQuantity","handler","parseInt","value","retrievedObject","getItem","retrievedQuant","renderList","map","console","log","parse","from"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport diamondBlock from './diamondBlock.png';\nimport diamondSword from './diamondSword.png';\nimport diamondPickaxe from './diamondPickaxe.png';\n\nconst Shop = ({cartArr, setCartArr}) => {\n\n  const [items, setItems] = useState([\n    {name: \"Diamond Block\",\n    price: 10, \n    img: diamondBlock,\n    id: \"db\",\n    quantity: 1}, \n    {name: \"Diamond Sword\",\n    price: 5, \n    img: diamondSword ,\n    id: \"ds\",\n    quantity: 1}, \n    {name: \"Diamond Pickaxe\",\n    price: 6, \n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 1}, \n  ]);\n\n const [incr, setIncr] = useState(null)\n const [cartQuantity, setCartQuantity] = useState(0); \n \n   function addToCart(e) {  \n\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    if(itemsArr[indexSelectedItem].quantity === 0) {\n      alert(\"can't buy 0\")\n    }\n    let cartItems = cartArr;\n    \n    cartItems[indexSelectedItem].quantity = cartItems[indexSelectedItem].quantity + itemsArr[indexSelectedItem].quantity;\n     /* let objItem = {name: itemsArr[indexSelectedItem].name,\n    quantity: itemsArr[indexSelectedItem].quantity,\n    img: itemsArr[indexSelectedItem].img,\n    price: itemsArr[indexSelectedItem].price,\n    id: itemsArr[indexSelectedItem].id}  */\n    setCartArr(cartItems)\n    localStorage.setItem('items', JSON.stringify(cartArr));\n   setCartQuantity(cartArr[indexSelectedItem].quantity + cartQuantity)\n     \n  \n  \n    localStorage.setItem('cartquant', JSON.stringify(cartQuantity))\n    setQuant(true)\n   \n     \n  /*  setCartQuantity(cartQuantity + itemsArr[indexSelectedItem].quantity)*/\n    \n   \n \n  }\n\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity =  itemsArr[indexSelectedItem].quantity + 1;\n    setItems(itemsArr)\n    setIncr(true)\n    \n  }\n\n  function decrementQuantity(e) {\n\n  }\n\n  function handler(e) {\n    setIncr(true)\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n     itemsArr[indexSelectedItem].quantity =+ parseInt(e.target.value)\n  \n     setItems(itemsArr)\n  \n  }\n\n  useEffect(() => {\n    if(incr) {\n      setItems(items)\n      setIncr(false)\n     \n    }\n\n    \n  \n  },[ incr, items])\n  var retrievedObject = localStorage.getItem('items');\n\n  var retrievedQuant = localStorage.getItem('cartquant');\n  function renderList() {\n    return (items.map(item => {\n      return (<li className=\"liItemWrap\" key={item.id}>{item.name} \n      <img className=\"itemImg\" src={item.img} alt=\"imgItem\"/> \n       Unit price : {item.price} \n      <div className=\"quantitySection\">\n        <p> Quantity :</p>\n         <div className=\"incrDecrDiv\">\n           <input value={item.quantity || 0} id={item.id} onChange={(e) => handler(e)} className=\"quantityInput\"/>\n           <button id={item.id} onClick={(e) => incrementQuantity(e)} className=\"incrDecr\">+</button>\n           <button id={item.id} onClick={(e) => decrementQuantity(e)} className=\"incrDecr\">-</button>\n         </div>\n      </div>\n      <div className=\"totalPrice\">Total price : {parseInt(item.price  || 0 ) * parseInt(item.quantity || 0)}</div>\n      <button id={item.id} className=\"addToCart\" onClick={(e) => addToCart(e)}>Add to cart</button></li>)\n    }))\n  }\n\n\n\n\n  console.log('retrievedObject: ',JSON.parse(retrievedObject) );\n  \n    return (\n        <div>\n          <div className=\"barCart\">\n          <Link   to='/shop/cart' state={{ from: JSON.parse(retrievedObject) }}>  <div className=\"cartSection\">Cart ( {retrievedQuant} ) </div> </Link>\n         </div>\n          <h1 className=\"shopTitle\">Shop</h1>\n           <div className=\"itemsSection\">\n           {renderList()}\n           </div>\n        </div>\n      );\n    };\n    \n    \n    export default Shop;"]},"metadata":{},"sourceType":"module"}