{"ast":null,"code":"var _jsxFileName = \"/home/atsal/router/src/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLinkClickHandler } from \"react-router-dom\";\nimport diamondBlock from './diamondBlock.png';\nimport diamondSword from './diamondSword.png';\nimport diamondPickaxe from './diamondPickaxe.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  _s();\n\n  const [items, setItems] = useState([{\n    name: \"Diamond Block\",\n    price: 10,\n    img: diamondBlock,\n    id: \"db\",\n    quantity: 1\n  }, {\n    name: \"Diamond Sword\",\n    price: 5,\n    img: diamondSword,\n    id: \"ds\",\n    quantity: 1\n  }, {\n    name: \"Diamond Pickaxe\",\n    price: 6,\n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 1\n  }]);\n  useEffect(() => {\n    console.log(cartArr);\n  }, []); //activate useEffect so the quantity is rendered at the same time the input value changes and incrementation/decrementation is activated\n\n  const [cartArr, setCartArr] = useState([{\n    name: \"Diamond Block\",\n    price: 10,\n    img: diamondBlock,\n    id: \"db\",\n    quantity: 0\n  }, {\n    name: \"Diamond Sword\",\n    price: 5,\n    img: diamondSword,\n    id: \"ds\",\n    quantity: 0\n  }, {\n    name: \"Diamond Pickaxe\",\n    price: 6,\n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 0\n  }]);\n  const [cartQuantity, setCartQuantity] = useState(0);\n  const [currentItem, setCurrentItem] = useState(0);\n  const [incr, setIncr] = useState(null);\n\n  function addToCart(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n\n    if (itemsArr[indexSelectedItem].quantity === 0) {\n      alert(\"can't buy 0\");\n    }\n\n    let cartItems = cartArr;\n    cartItems[indexSelectedItem].quantity = cartItems[indexSelectedItem].quantity + itemsArr[indexSelectedItem].quantity;\n    /* let objItem = {name: itemsArr[indexSelectedItem].name,\n    quantity: itemsArr[indexSelectedItem].quantity,\n    img: itemsArr[indexSelectedItem].img,\n    price: itemsArr[indexSelectedItem].price,\n    id: itemsArr[indexSelectedItem].id}  */\n\n    setCartArr(cartItems);\n    setCartQuantity(cartQuantity + itemsArr[indexSelectedItem].quantity);\n  }\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = itemsArr[indexSelectedItem].quantity + 1;\n    setItems(itemsArr);\n    setIncr(true);\n  }\n\n  function decrementQuantity(e) {}\n\n  function handler(e) {\n    setIncr(true);\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = +parseInt(e.target.value);\n    setItems(itemsArr);\n  }\n\n  useEffect(() => {\n    if (incr) {\n      setItems(items);\n      setIncr(false);\n    }\n  });\n\n  function renderList() {\n    return items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"liItemWrap\",\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"itemImg\",\n          src: item.img,\n          alt: \"imgItem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this), \"Unit price : \", item.price, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantitySection\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Quantity :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"incrDecrDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: item.quantity || 0,\n              id: item.id,\n              onChange: e => handler(e),\n              className: \"quantityInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: item.id,\n              onClick: e => incrementQuantity(e),\n              className: \"incrDecr\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: item.id,\n              onClick: e => decrementQuantity(e),\n              className: \"incrDecr\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"totalPrice\",\n          children: [\"Total price : \", parseInt(item.price || 0) * parseInt(item.quantity || 0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: item.id,\n          className: \"addToCart\",\n          onClick: e => addToCart(e),\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barCart\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/shop/cart\",\n        state: {\n          from: cartArr\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cartSection\",\n          children: [\"Cart ( \", cartQuantity, \" )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"shopTitle\",\n      children: \"Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemsSection\",\n      children: renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"0hcS1BQS+1l7BRmjlxZyqd0ST64=\");\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/home/atsal/router/src/Shop.js"],"names":["React","useState","useEffect","Link","useLinkClickHandler","diamondBlock","diamondSword","diamondPickaxe","Shop","items","setItems","name","price","img","id","quantity","console","log","cartArr","setCartArr","cartQuantity","setCartQuantity","currentItem","setCurrentItem","incr","setIncr","addToCart","e","indexSelectedItem","findIndex","item","target","itemsArr","alert","cartItems","incrementQuantity","decrementQuantity","handler","parseInt","value","renderList","map","from"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLinkClickHandler } from \"react-router-dom\";\nimport diamondBlock from './diamondBlock.png';\nimport diamondSword from './diamondSword.png';\nimport diamondPickaxe from './diamondPickaxe.png';\n\n\nconst Shop = () => {\n\n  const [items, setItems] = useState([\n    {name: \"Diamond Block\",\n    price: 10, \n    img: diamondBlock,\n    id: \"db\",\n    quantity: 1}, \n    {name: \"Diamond Sword\",\n    price: 5, \n    img: diamondSword ,\n    id: \"ds\",\n    quantity: 1}, \n    {name: \"Diamond Pickaxe\",\n    price: 6, \n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 1}, \n  ]);\n\n  useEffect(() => {\n    console.log(cartArr)\n  }, [])\n\n  //activate useEffect so the quantity is rendered at the same time the input value changes and incrementation/decrementation is activated\n const [cartArr, setCartArr] = useState([{name: \"Diamond Block\",\n price: 10, \n img: diamondBlock,\n id: \"db\",\n quantity: 0}, \n {name: \"Diamond Sword\",\n price: 5, \n img: diamondSword ,\n id: \"ds\",\n quantity: 0}, \n {name: \"Diamond Pickaxe\",\n price: 6, \n img: diamondPickaxe,\n id: \"dp\",\n quantity: 0}, ]);\n\n const [cartQuantity, setCartQuantity] = useState(0);\n const [currentItem, setCurrentItem] = useState(0)\n const [incr, setIncr] = useState(null)\n\n\n  function addToCart(e) {  \n\n    \n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    if(itemsArr[indexSelectedItem].quantity === 0) {\n      alert(\"can't buy 0\")\n    }\n    let cartItems = cartArr;\n\n    cartItems[indexSelectedItem].quantity = cartItems[indexSelectedItem].quantity + itemsArr[indexSelectedItem].quantity;\n     /* let objItem = {name: itemsArr[indexSelectedItem].name,\n    quantity: itemsArr[indexSelectedItem].quantity,\n    img: itemsArr[indexSelectedItem].img,\n    price: itemsArr[indexSelectedItem].price,\n    id: itemsArr[indexSelectedItem].id}  */\n    setCartArr(cartItems)\n    setCartQuantity(cartQuantity + itemsArr[indexSelectedItem].quantity)\n    \n  \n  }\n\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity =  itemsArr[indexSelectedItem].quantity + 1;\n    setItems(itemsArr)\n    setIncr(true)\n    \n  }\n\n  function decrementQuantity(e) {\n\n  }\n\n  function handler(e) {\n    setIncr(true)\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n     itemsArr[indexSelectedItem].quantity =+ parseInt(e.target.value)\n  \n     setItems(itemsArr)\n  \n  }\n\n  useEffect(() => {\n    if(incr) {\n      setItems(items)\n      setIncr(false)\n    }\n\n  })\n\n  function renderList() {\n    return (items.map(item => {\n      return (<li className=\"liItemWrap\" key={item.id}>{item.name} \n      <img className=\"itemImg\" src={item.img} alt=\"imgItem\"/> \n       Unit price : {item.price} \n      <div className=\"quantitySection\">\n        <p> Quantity :</p>\n         <div className=\"incrDecrDiv\">\n           <input value={item.quantity || 0} id={item.id} onChange={(e) => handler(e)} className=\"quantityInput\"/>\n           <button id={item.id} onClick={(e) => incrementQuantity(e)} className=\"incrDecr\">+</button>\n           <button id={item.id} onClick={(e) => decrementQuantity(e)} className=\"incrDecr\">-</button>\n         </div>\n      </div>\n      <div className=\"totalPrice\">Total price : {parseInt(item.price  || 0 ) * parseInt(item.quantity || 0)}</div>\n      <button id={item.id} className=\"addToCart\" onClick={(e) => addToCart(e)}>Add to cart</button></li>)\n    }))\n  }\n\n\n    return (\n        <div>\n          <div className=\"barCart\">\n          <Link   to='/shop/cart' state={{ from: cartArr }}><div className=\"cartSection\">Cart ( {cartQuantity} )</div></Link>\n         </div>\n          <h1 className=\"shopTitle\">Shop</h1>\n           <div className=\"itemsSection\">\n           {renderList()}\n           </div>\n        </div>\n      );\n    };\n    \n    export default Shop;"]},"metadata":{},"sourceType":"module"}