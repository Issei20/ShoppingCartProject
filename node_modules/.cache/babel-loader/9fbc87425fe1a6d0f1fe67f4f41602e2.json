{"ast":null,"code":"var _jsxFileName = \"/home/atsal/router/src/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport diamondBlock from './diamondBlock.png';\nimport diamondSword from './diamondSword.png';\nimport diamondPickaxe from './diamondPickaxe.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  _s();\n\n  const [items, setItems] = useState([{\n    name: \"Diamond Block\",\n    price: \"10 MineDollars\",\n    img: diamondBlock,\n    id: \"db\",\n    quantity: 0\n  }, {\n    name: \"Diamond Sword\",\n    price: \"5 MineDollars\",\n    img: diamondSword,\n    id: \"ds\",\n    quantity: 0\n  }, {\n    name: \"Diamond Pickaxe\",\n    price: \"6 MineDollars\",\n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 0\n  }]); //activate useEffect so the quantity is rendered at the same time the input value changes and incrementation/decrementation is activated\n\n  const [currIncr, setCurrIncr] = useState(0);\n  useEffect(() => {\n    let itemsArr = items;\n    setItems(itemsArr);\n    setCurrIncr(false);\n    console.log(items);\n  }, [items, currIncr]);\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = itemsArr[indexSelectedItem].quantity + 1;\n    setCurrIncr(true);\n    setItems(itemsArr);\n  }\n\n  function handleChangeInput(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = parseInt(e.target.value);\n    setCurrIncr(true);\n    setItems(itemsArr);\n  }\n\n  function renderList() {\n    return items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"liItemWrap\",\n        children: [item.name, /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"itemImg\",\n          src: item.img,\n          alt: \"imgItem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), \"Price : \", item.price, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quantity : \", item.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantitySection\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" Quantity :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"incrDecrDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: item.quantity,\n              id: item.id,\n              onChange: e => handleChangeInput(e),\n              className: \"quantityInput\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: item.id,\n              onClick: e => incrementQuantity(e),\n              className: \"incrDecr\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: item.id,\n              className: \"incrDecr\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"addToCart\",\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barCart\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartSection\",\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"shopTitle\",\n      children: \"Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemsSection\",\n      children: renderList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"LSYM4AG2a7JaSPlYDQs3ZyhwZp4=\");\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/home/atsal/router/src/Shop.js"],"names":["React","useState","useEffect","useRef","diamondBlock","diamondSword","diamondPickaxe","Shop","items","setItems","name","price","img","id","quantity","currIncr","setCurrIncr","itemsArr","console","log","incrementQuantity","e","indexSelectedItem","findIndex","item","target","handleChangeInput","parseInt","value","renderList","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport diamondBlock from './diamondBlock.png'\nimport diamondSword from './diamondSword.png'\nimport diamondPickaxe from './diamondPickaxe.png'\n\nconst Shop = () => {\n\n  const [items, setItems] = useState([\n    {name: \"Diamond Block\",\n    price: \"10 MineDollars\", \n    img: diamondBlock,\n    id: \"db\",\n    quantity: 0}, \n    {name: \"Diamond Sword\",\n    price: \"5 MineDollars\", \n    img: diamondSword ,\n    id: \"ds\",\n    quantity: 0}, \n    {name: \"Diamond Pickaxe\",\n    price: \"6 MineDollars\", \n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 0}, \n  ]);\n\n\n  //activate useEffect so the quantity is rendered at the same time the input value changes and incrementation/decrementation is activated\n const [currIncr, setCurrIncr] = useState(0);\n\n    useEffect(() => {\n      let itemsArr = items;\n      setItems(itemsArr)\n      setCurrIncr(false)\n\n      console.log(items)\n    },[items, currIncr])\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = itemsArr[indexSelectedItem].quantity + 1;\n    setCurrIncr(true)\n    setItems(itemsArr);\n\n  }\n\n  function handleChangeInput(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = parseInt(e.target.value);\n    setCurrIncr(true)\n    setItems(itemsArr)\n  }\n\n  function renderList() {\n    return (items.map(item => {\n      return (<li className=\"liItemWrap\" key={item.id}>{item.name} \n      <img className=\"itemImg\" src={item.img} alt=\"imgItem\"/> \n       Price : {item.price} \n      <p>Quantity : {item.quantity}</p>\n      <div className=\"quantitySection\">\n        <p> Quantity :</p>\n        <div className=\"incrDecrDiv\">\n        <input value={item.quantity} id={item.id}  onChange={(e)=> handleChangeInput(e) } className=\"quantityInput\"/>\n        <button id={item.id} onClick={(e) => incrementQuantity(e)} className=\"incrDecr\">+</button>\n        <button id={item.id} className=\"incrDecr\">-</button>\n        </div>\n      </div>\n      <button className=\"addToCart\">Add to cart</button></li>)\n    }))\n  }\n\n    return (\n        <div>\n          <div className=\"barCart\">\n            <div className=\"cartSection\">Cart</div>\n          </div>\n          <h1 className=\"shopTitle\">Shop</h1>\n           <div className=\"itemsSection\">\n           {renderList()}\n           </div>\n        </div>\n      );\n    };\n    \n    export default Shop;"]},"metadata":{},"sourceType":"module"}