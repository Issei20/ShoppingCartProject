{"ast":null,"code":"var _jsxFileName = \"/home/atsal/router/src/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport diamondBlock from './diamondBlock.png';\nimport diamondSword from './diamondSword.png';\nimport diamondPickaxe from './diamondPickaxe.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shop = () => {\n  _s();\n\n  const [items, setItems] = useState([{\n    name: \"Diamond Block\",\n    price: \"10 MineDollars\",\n    img: diamondBlock,\n    id: \"db\",\n    quantity: 0\n  }, {\n    name: \"Diamond Sword\",\n    price: \"5 MineDollars\",\n    img: diamondSword,\n    id: \"ds\",\n    quantity: 0\n  }, {\n    name: \"Diamond Pickaxe\",\n    price: \"6 MineDollars\",\n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 0\n  }]);\n  useEffect(() => {\n    let newArr = items;\n    setItems(newArr);\n  });\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = itemsArr[indexSelectedItem].quantity + 1;\n    setItems(itemsArr);\n    console.log(items);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"barCart\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cartSection\",\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"shopTitle\",\n      children: \"Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemsSection\",\n      children: items.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"liItemWrap\",\n          children: [item.name, /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"itemImg\",\n            src: item.img,\n            alt: \"imgItem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 10\n          }, this), \"Price : \", item.price, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity : \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantitySection\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Quantity :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"incrDecrDiv\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: item.quantity,\n                onChange: e => item.quantity = e.target.value,\n                className: \"quantityInput\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: item.id,\n                onClick: e => incrementQuantity(e),\n                className: \"incrDecr\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 12\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: item.id,\n                className: \"incrDecr\",\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 12\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"addToCart\",\n            children: \"Add to cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 10\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Shop, \"ifErHBPyZZ4QUMTmFLcIO4zJcUs=\");\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/home/atsal/router/src/Shop.js"],"names":["React","useState","useEffect","diamondBlock","diamondSword","diamondPickaxe","Shop","items","setItems","name","price","img","id","quantity","newArr","incrementQuantity","e","indexSelectedItem","findIndex","item","target","itemsArr","console","log","map","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport diamondBlock from './diamondBlock.png'\nimport diamondSword from './diamondSword.png'\nimport diamondPickaxe from './diamondPickaxe.png'\n\nconst Shop = () => {\n\n  const [items, setItems] = useState([\n    {name: \"Diamond Block\",\n    price: \"10 MineDollars\", \n    img: diamondBlock,\n    id: \"db\",\n    quantity: 0}, \n    {name: \"Diamond Sword\",\n    price: \"5 MineDollars\", \n    img: diamondSword ,\n    id: \"ds\",\n    quantity: 0}, \n    {name: \"Diamond Pickaxe\",\n    price: \"6 MineDollars\", \n    img: diamondPickaxe,\n    id: \"dp\",\n    quantity: 0}, \n  ]);\n\n\n  useEffect( () => {\n      let newArr = items;\n      setItems(newArr)\n  })\n\n  function incrementQuantity(e) {\n    let indexSelectedItem = items.findIndex(item => item.id === e.target.id);\n    let itemsArr = items;\n    itemsArr[indexSelectedItem].quantity = itemsArr[indexSelectedItem].quantity + 1;\n    setItems(itemsArr);\n    console.log(items)\n  }\n\n\n    return (\n        <div>\n          <div className=\"barCart\">\n            <div className=\"cartSection\">Cart</div>\n          </div>\n          <h1 className=\"shopTitle\">Shop</h1>\n           <div className=\"itemsSection\">\n           {items.map(item => {\n         return (<li className=\"liItemWrap\" key={item.id}>{item.name} \n         <img className=\"itemImg\" src={item.img} alt=\"imgItem\"/> \n          Price : {item.price} \n         <p>Quantity : {item.quantity}</p>\n         <div className=\"quantitySection\">\n           <p> Quantity :</p>\n           <div className=\"incrDecrDiv\">\n           <input value={item.quantity} onChange={e => item.quantity = e.target.value} className=\"quantityInput\"/>\n           <button id={item.id} onClick={(e) => incrementQuantity(e)} className=\"incrDecr\">+</button>\n           <button id={item.id} className=\"incrDecr\">-</button>\n           </div>\n         </div>\n         <button className=\"addToCart\">Add to cart</button></li>)\n       })}\n           </div>\n        </div>\n      );\n    };\n    \n    export default Shop;"]},"metadata":{},"sourceType":"module"}